def asynchronize(): ...
def unwrap_args_session(): ...
def unwrap_kwargs_session(): ...
def coroutine_annotation(): ...

class MotorAttributeFactory(object): ...
class Async(MotorAttributeFactory): ...
class AsyncRead(Async): ...
class AsyncWrite(Async): ...
class AsyncCommand(Async): ...
class ReadOnlyProperty(MotorAttributeFactory): ...
class DelegateMethod(ReadOnlyProperty): ...
class MotorCursorChainingMethod(MotorAttributeFactory): ...

def create_class_with_framework(): ...
